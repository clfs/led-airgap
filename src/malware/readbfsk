#!/bin/bash

# SETUP #######################################################################

# Specify error behavior (these should work but don't lol)
#set -o errexit
#set -o pipefail
#set -o nounset

# Disable Unicode support for ~10% time savings
export LC_ALL=C

# Read in arguments
bs_sml="$1"
bs_lrg="$2"
ct_sml="$3"
ct_lrg="$4"

# FUNCTIONS ###################################################################

# Encode data from pipe
encode_data () {

    # Download data as string, "1010101..."
    data_initial="$(cat | xxd -b | cut -d: -f 2 | sed 's/  .*//; s/ //g' | tr -d [:space:])"

    # Perform run-length limited encoding
    data_rll=""
    s=""
    for (( i=0; i<${#data_initial}; i+=4 ))
    do
        s=""
        case ${data_initial:i:4} in
            "0000") s="11001"
                ;;
            "0001") s="11011"
                ;;
            "0010") s="10010"
                ;;
            "0011") s="10011"
                ;;
            "0100") s="11101"
                ;;
            "0101") s="10101"
                ;;
            "0110") s="10110"
                ;;
            "0111") s="10111"
                ;;
            "1000") s="11010"
                ;;
            "1010") s="01010"
                ;;
            "1011") s="01011"
                ;;
            "1100") s="11110"
                ;;
            "1101") s="01101"
                ;;
            "1110") s="01110"
                ;;
            "1111") s="01111"
                ;;
        esac
        data_rll=$data_rll$s
    done
    data_final=$data_rll
}

# Drop the cache before we do reads
drop_cache () {
    echo 3 | sudo tee /proc/sys/vm/drop_caches >& /dev/null
}

# Read through data and perform BFSK
bfsk () {
    for i in $(seq 1 ${#data_final})
    do
        case ${data_final:i-1:1} in
            0) dd if=/dev/sda2 iflag=direct bs="$bs_sml" count="ct_sml" >& /dev/null
                ;;
            1) dd if=/dev/sda2 iflag=direct bs="$bs_lrg" count="ct_lrg" >& /dev/null
                ;;
        esac
    done
}

# RUN SCRIPT ##################################################################

encode_data # Grab data from pipe, and properly encode it
#echo $data_final # Optional echo to screen for debug
drop_cache  # Drop the cache before we perform BFSK
time bfsk   # Modulate the hard drive LED
